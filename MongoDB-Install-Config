Install and Config MongoDB on Ubuntu 18.04:
Prerequisites:

  Step 1 — Logging in as Root:
  ssh root@your_server_ip


  Step 2 — Creating a New User:
  adduser mysqluser


  Step 3 — Granting Administrative Privileges:
  usermod -aG sudo sammy


  Step 4 — Setting Up a Basic Firewall:
  ufw app list
  ufw allow OpenSSH
  ufw enable
  ufw status
  

  Step 5 — Enabling External Access for Your Regular User:

  If the Root Account Uses Password Authentication:
  ssh sammy@your_server_ip
  sudo command_to_run
  
  If the Root Account Uses SSH Key Authentication:

  The simplest way to copy the files with the correct ownership and permissions is with the rsync command.
  This will copy the root user’s .ssh directory, preserve the permissions, and modify the file owners, all in a single command.
  Make sure to change the highlighted portions of the command below to match your regular user’s name:
  
  rsync --archive --chown=mysqluser:mysqluser ~/.ssh /home/mysqluser
  ssh sammy@your_server_ip
  sudo command_to_run

  For many other details please access the following link:
  https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-18-04

1.Step 1 — Installing MongoDB:
  sudo apt update
  sudo apt install -y mongodb

2.Step 2 — Checking the Service and Database:
  sudo systemctl status mongodb
  mongo --eval 'db.runCommand({ connectionStatus: 1 })'

3.Step 3 — Managing the MongoDB Service:
  sudo systemctl status mongodb
  sudo systemctl stop mongodb
  sudo systemctl start mongodb
  sudo systemctl enable mongod
  sudo systemctl restart mongodb
  sudo systemctl disable mongodb
  sudo systemctl enable mongodb
  sudo netstat -plntu

4.Step 4 — Adjusting the Firewall (Optional):
  sudo ufw allow from your_other_server_ip/32 to any port 27017
  sudo ufw status
  sudo ufw status numbered
  sudo ufw delete 4(example of rule number)


5.To allow remote MongoDB connections, you need to add your server IP address to /etc/mongodb.conf configuration file as shown:
  bind_ip = 127.0.0.1,your_server_ip
  #port = 27017

  sudo systemctl restart mongodb

6.Step 4: Create MongoDB Database Root User and Password:
  mongo
  show dbs
  use admin
  db.createUser({user:"root", pwd:"=@!#@%$admin1", roles:[{role:"root", db:"admin"}]})

7.The mongodb instance was started without the --auth command line option.
  You need to enable authentication of users by editing /lib/systemd/system/mongod.service file, first open the file for editing like so:
  ExecStart=/usr/bin/mongod --unixSocketPrefix=${SOCKETPATH} --config ${CONF} $DAEMON_OPTS

8.systemctl daemon-reload
  sudo systemctl restart mongodb	
  sudo systemctl status mongodb	

9.mongo -u "root" -p --authenticationDatabase "admin"
  mongo -u admin -p mihaivirlan --authenticationDatabase admin


10.MongoDB: Install Client – Mongo Shell:
  sudo apt install
  echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse" \
    | sudo tee /etc/apt/sources.list.d/mongodb-org-4.0.list

  sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 \
    --recv 9DA31620334BD75D9DCB49F368818C72E52529D4

  sudo apt-get update
  sudo apt-get install -y mongodb-org-shell

11.Connection from client to MongoDB:
   mongo -u admin -p mihaivirlan 192.168.81.88/admin

   *where: admin - is the admin user on host database;
           mihaivirlan - is the password for admin user on database host;
           192.168.81.88 - is the host ip address;
           admin - name database



http://192.168.81.88:27017/

